[{"C:\\IT_Class\\Projects\\ToDoList\\src\\reportWebVitals.ts":"1","C:\\IT_Class\\Projects\\ToDoList\\src\\features\\TodolistsList\\todolists-reducer.ts":"2","C:\\IT_Class\\Projects\\ToDoList\\src\\features\\TodolistsList\\TodolistsList.tsx":"3","C:\\IT_Class\\Projects\\ToDoList\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"4","C:\\IT_Class\\Projects\\ToDoList\\src\\components\\EditableSpan\\EditableSpan.tsx":"5","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\reportWebVitals.ts":"6","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\features\\Login\\auth-reducer.ts":"7","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"8","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"9","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\components\\EditableSpan\\EditableSpan.tsx":"10","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\index.tsx":"11","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\app\\App.tsx":"12","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\features\\TodolistsList\\todolists-reducer.ts":"13","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\api\\todolists-api.ts":"14","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"15","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\app\\app-reducer.ts":"16","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\features\\TodolistsList\\tasks-reducer.ts":"17","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\components\\AddItemForm\\AddItemForm.tsx":"18","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\features\\TodolistsList\\TodolistsList.tsx":"19","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\features\\Login\\Login.tsx":"20","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\utils\\error-utils.ts":"21","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\app\\store.ts":"22"},{"size":425,"mtime":1607869388000,"results":"23","hashOfConfig":"24"},{"size":4585,"mtime":1597327450000,"results":"25","hashOfConfig":"24"},{"size":4034,"mtime":1612451954016,"results":"26","hashOfConfig":"24"},{"size":4193,"mtime":1596715250000,"results":"27","hashOfConfig":"24"},{"size":952,"mtime":1594154724000,"results":"28","hashOfConfig":"24"},{"size":425,"mtime":1607869388000,"results":"29","hashOfConfig":"30"},{"size":2130,"mtime":1620848347362,"results":"31","hashOfConfig":"30"},{"size":1101,"mtime":1620848439032,"results":"32","hashOfConfig":"30"},{"size":4193,"mtime":1596715250000,"results":"33","hashOfConfig":"30"},{"size":952,"mtime":1594154724000,"results":"34","hashOfConfig":"30"},{"size":748,"mtime":1612354965784,"results":"35","hashOfConfig":"30"},{"size":2801,"mtime":1612460222651,"results":"36","hashOfConfig":"30"},{"size":4283,"mtime":1621266187660,"results":"37","hashOfConfig":"30"},{"size":3087,"mtime":1612459912379,"results":"38","hashOfConfig":"30"},{"size":1773,"mtime":1596295538000,"results":"39","hashOfConfig":"30"},{"size":2039,"mtime":1621090930797,"results":"40","hashOfConfig":"30"},{"size":5750,"mtime":1622065769042,"results":"41","hashOfConfig":"30"},{"size":1595,"mtime":1596715562000,"results":"42","hashOfConfig":"30"},{"size":4047,"mtime":1621266250539,"results":"43","hashOfConfig":"30"},{"size":3949,"mtime":1612444832764,"results":"44","hashOfConfig":"30"},{"size":704,"mtime":1620848347388,"results":"45","hashOfConfig":"30"},{"size":989,"mtime":1620844090828,"results":"46","hashOfConfig":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4244dz",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"1umssb6",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\IT_Class\\Projects\\ToDoList\\src\\reportWebVitals.ts",[],"C:\\IT_Class\\Projects\\ToDoList\\src\\features\\TodolistsList\\todolists-reducer.ts",["98"],"C:\\IT_Class\\Projects\\ToDoList\\src\\features\\TodolistsList\\TodolistsList.tsx",["99","100","101","102","103","104","105","106"],"C:\\IT_Class\\Projects\\ToDoList\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["107","108","109","110","111","112"],"C:\\IT_Class\\Projects\\ToDoList\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\reportWebVitals.ts",[],["113","114"],"C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\features\\Login\\auth-reducer.ts",[],"C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],["115","116"],"C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["117","118","119","120","121","122"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType, TodolistDomainType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\n\r\ntype PropsType = {\r\n    todolist: TodolistDomainType\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    demo?: boolean\r\n}\r\n\r\nexport const Todolist = React.memo(function ({demo = false, ...props}: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (demo) {\r\n            return\r\n        }\r\n        const thunk = fetchTasksTC(props.todolist.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.todolist.id)\r\n    }, [props.addTask, props.todolist.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.todolist.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.todolist.id, title)\r\n    }, [props.todolist.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.todolist.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.todolist.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.todolist.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.todolist.entityStatus === 'loading'}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} disabled={props.todolist.entityStatus === 'loading'}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.todolist.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.todolist.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\index.tsx",[],"C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\app\\App.tsx",["123"],"import React, {useEffect} from 'react'\r\nimport './App.css'\r\nimport {\r\n    AppBar,\r\n    Button,\r\n    Container,\r\n    IconButton,\r\n    LinearProgress,\r\n    Toolbar,\r\n    Typography,\r\n} from '@material-ui/core'\r\nimport {Menu} from '@material-ui/icons'\r\nimport {TodolistsList} from '../features/TodolistsList/TodolistsList'\r\nimport {ErrorSnackbar} from '../components/ErrorSnackbar/ErrorSnackbar'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from './store'\r\nimport {initializeApp, RequestStatusType} from './app-reducer'\r\nimport {Login} from \"../features/Login/Login\";\r\nimport {Route, Switch, Redirect} from \"react-router-dom\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {logout} from \"../features/Login/auth-reducer\";\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}\r\n\r\nfunction App({demo = false}: PropsType) {\r\n\r\n    const status = useSelector<AppRootStateType, RequestStatusType>((state) => state.app.status);\r\n    const isInitialized = useSelector<AppRootStateType, boolean>((state) => state.app.isInitialized);\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>((state) => state.auth.isLoggedIn);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeApp());\r\n    }, [])\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n    }\r\n\r\n\r\n    if (!isInitialized) {\r\n        return <div style={ {position: \"fixed\", top: '30%', textAlign: 'center', width: '100%'} }>\r\n            <CircularProgress color=\"secondary\"/>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <ErrorSnackbar/>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                        <Menu/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                        News\r\n                    </Typography>\r\n                    {isLoggedIn && <Button color=\"inherit\" onClick={logoutHandler}>Log out</Button>}\r\n                </Toolbar>\r\n                {status === 'loading' && <LinearProgress/>}\r\n            </AppBar>\r\n            <Container fixed>\r\n                <Switch>\r\n                    <Route exact path={'/'} render={() => <TodolistsList demo={demo}/>}/>\r\n                    <Route exact path={'/login'} render={() => <Login/>}/>\r\n                    <Route exact path={'/404'} render={() =>\r\n                        <div style={{position: 'fixed', top: '30%', left: '40%', textAlign: 'center'}}><h1> 404: PAGE\r\n                            NOT FOUND</h1></div>}/>\r\n                    <Redirect from={'*'} to={'/404'}/>\r\n                </Switch>\r\n            </Container>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\features\\TodolistsList\\todolists-reducer.ts",["124"],"import {todolistsAPI, TodolistType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {RequestStatusType, setAppStatusAC} from '../../app/app-reducer'\r\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState: Array<TodolistDomainType> = []\r\n\r\nconst slice = createSlice({\r\n    name: 'app',\r\n    initialState: initialState,\r\n    reducers: {\r\n        removeTodolistAC(state, action: PayloadAction<{ id: string }>) {\r\n             state.filter(tl => tl.id != action.payload.id);\r\n        },\r\n        addTodolistAC(state, action: PayloadAction<{ todolist: TodolistType }>) {\r\n            state.unshift({...action.payload.todolist, filter: 'all', entityStatus: 'idle'});\r\n        },\r\n        changeTodolistTitleAC(state, action: PayloadAction<{ id: string, title: string }>) {\r\n            const index = state.findIndex(tl => tl.id === action.payload.id);\r\n            state[index].title = action.payload.title;\r\n        },\r\n        changeTodolistFilterAC(state, action: PayloadAction<{ id: string, filter: FilterValuesType }>) {\r\n            const index = state.findIndex(tl => tl.id === action.payload.id);\r\n            state[index].filter = action.payload.filter;\r\n        },\r\n        changeTodolistEntityStatusAC(state, action: PayloadAction<{ id: string, status: RequestStatusType }>) {\r\n            const index = state.findIndex(tl => tl.id === action.payload.id);\r\n            state[index].entityStatus = action.payload.status;\r\n        },\r\n        // необходимо возврощать объект а не присваивать state = action значение для того что бы он не перезатёр существующий объект библиотеки immer\r\n        setTodolistsAC(state, action: PayloadAction<{ todolists: Array<TodolistType> }>) {\r\n               return action.payload.todolists.map(tl => ({...tl, filter: 'all', entityStatus: 'idle'}))\r\n        }\r\n    }\r\n});\r\n\r\nexport const {removeTodolistAC, addTodolistAC, changeTodolistTitleAC, changeTodolistFilterAC, changeTodolistEntityStatusAC, setTodolistsAC} = slice.actions;\r\n\r\n\r\nexport const todolistsReducer = slice.reducer;\r\n\r\n\r\n\r\n// thunks\r\nexport const fetchTodolistsTC = () => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setAppStatusAC({status: 'loading'}))\r\n        todolistsAPI.getTodolists()\r\n            .then((res) => {\r\n                dispatch(setTodolistsAC({todolists: res.data}))\r\n                dispatch(setAppStatusAC({status: 'succeeded'}))\r\n            })\r\n    }\r\n}\r\nexport const removeTodolistTC = (todolistId: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        //изменим глобальный статус приложения, чтобы вверху полоса побежала\r\n        dispatch(setAppStatusAC({status: 'loading'}))\r\n        //изменим статус конкретного тудулиста, чтобы он мог задизеблить что надо\r\n        dispatch(changeTodolistEntityStatusAC( {id:todolistId, status: 'loading'}))\r\n        todolistsAPI.deleteTodolist(todolistId)\r\n            .then((res) => {\r\n                dispatch(removeTodolistAC({id: todolistId}))\r\n                //скажем глобально приложению, что асинхронная операция завершена\r\n                dispatch(setAppStatusAC({status: 'succeeded'}))\r\n            })\r\n    }\r\n}\r\nexport const addTodolistTC = (title: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setAppStatusAC({status: 'loading'}))\r\n        todolistsAPI.createTodolist(title)\r\n            .then((res) => {\r\n                dispatch(addTodolistAC({todolist: res.data.data.item}))\r\n                dispatch(setAppStatusAC({status: 'succeeded'}))\r\n            })\r\n    }\r\n}\r\nexport const changeTodolistTitleTC = (id: string, title: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        todolistsAPI.updateTodolist(id, title)\r\n            .then((res) => {\r\n                dispatch(changeTodolistTitleAC({id, title}))\r\n            })\r\n    }\r\n}\r\n\r\nexport type FilterValuesType = 'all' | 'active' | 'completed';\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\n\r\n","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\api\\todolists-api.ts",[],"C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["125","126","127"],"C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\app\\app-reducer.ts",[],"C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\features\\TodolistsList\\tasks-reducer.ts",[],"C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\components\\AddItemForm\\AddItemForm.tsx",["128","129","130"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport const AddItemForm = React.memo(function({addItem, disabled = false}: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItemHandler = () => {\r\n        if (title.trim() !== \"\") {\r\n            addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItemHandler();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   disabled={disabled}\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItemHandler} disabled={disabled}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\features\\TodolistsList\\TodolistsList.tsx",["131","132","133","134","135","136","137","138"],"import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {\r\n    addTodolistTC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleTC,\r\n    fetchTodolistsTC,\r\n    FilterValuesType,\r\n    removeTodolistTC,\r\n    TodolistDomainType\r\n} from './todolists-reducer'\r\nimport {addTaskTC, removeTaskTC, TasksStateType, updateTaskTC} from './tasks-reducer'\r\nimport {TaskStatuses} from '../../api/todolists-api'\r\nimport {Grid, Paper} from '@material-ui/core'\r\nimport {AddItemForm} from '../../components/AddItemForm/AddItemForm'\r\nimport {Todolist} from './Todolist/Todolist'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}\r\n\r\nexport const TodolistsList: React.FC<PropsType> = ({demo = false}) => {\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>((state) => state.auth.isLoggedIn);\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (demo || !isLoggedIn) {\r\n            return;\r\n        }\r\n        const thunk = fetchTodolistsTC()\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const thunk = removeTaskTC(id, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const thunk = addTaskTC(title, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeStatus = useCallback(function (id: string, status: TaskStatuses, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {status}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {title: newTitle}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC({id: todolistId, filter:value})\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const thunk = removeTodolistTC(id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const thunk = changeTodolistTitleTC(id, title)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const thunk = addTodolistTC(title)\r\n        dispatch(thunk)\r\n    }, [dispatch])\r\n\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return <>\r\n        <Grid container style={{padding: '20px'}}>\r\n            <AddItemForm addItem={addTodolist}/>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n            {\r\n                todolists.map(tl => {\r\n                    let allTodolistTasks = tasks[tl.id]\r\n\r\n                    return <Grid item key={tl.id}>\r\n                        <Paper style={{padding: '10px'}}>\r\n                            <Todolist\r\n                                todolist={tl}\r\n                                tasks={allTodolistTasks}\r\n                                removeTask={removeTask}\r\n                                changeFilter={changeFilter}\r\n                                addTask={addTask}\r\n                                changeTaskStatus={changeStatus}\r\n                                removeTodolist={removeTodolist}\r\n                                changeTaskTitle={changeTaskTitle}\r\n                                changeTodolistTitle={changeTodolistTitle}\r\n                                demo={demo}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                })\r\n            }\r\n        </Grid>\r\n    </>\r\n}\r\n","C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\features\\Login\\Login.tsx",["139"],"C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\utils\\error-utils.ts",["140"],"C:\\IT_Class\\DEVELOPER\\ToDoList\\src\\app\\store.ts",[],{"ruleId":"141","severity":1,"message":"142","line":10,"column":45,"nodeType":"143","messageId":"144","endLine":10,"endColumn":47},{"ruleId":"145","severity":1,"message":"146","line":36,"column":8,"nodeType":"147","endLine":36,"endColumn":10,"suggestions":"148"},{"ruleId":"145","severity":1,"message":"149","line":41,"column":8,"nodeType":"147","endLine":41,"endColumn":10,"suggestions":"150"},{"ruleId":"145","severity":1,"message":"149","line":46,"column":8,"nodeType":"147","endLine":46,"endColumn":10,"suggestions":"151"},{"ruleId":"145","severity":1,"message":"149","line":51,"column":8,"nodeType":"147","endLine":51,"endColumn":10,"suggestions":"152"},{"ruleId":"145","severity":1,"message":"149","line":56,"column":8,"nodeType":"147","endLine":56,"endColumn":10,"suggestions":"153"},{"ruleId":"145","severity":1,"message":"149","line":61,"column":8,"nodeType":"147","endLine":61,"endColumn":10,"suggestions":"154"},{"ruleId":"145","severity":1,"message":"149","line":66,"column":8,"nodeType":"147","endLine":66,"endColumn":10,"suggestions":"155"},{"ruleId":"145","severity":1,"message":"149","line":71,"column":8,"nodeType":"147","endLine":71,"endColumn":10,"suggestions":"156"},{"ruleId":"145","severity":1,"message":"157","line":35,"column":8,"nodeType":"147","endLine":35,"endColumn":10,"suggestions":"158"},{"ruleId":"145","severity":1,"message":"159","line":39,"column":8,"nodeType":"147","endLine":39,"endColumn":42,"suggestions":"160"},{"ruleId":"145","severity":1,"message":"159","line":46,"column":8,"nodeType":"147","endLine":46,"endColumn":54,"suggestions":"161"},{"ruleId":"145","severity":1,"message":"159","line":48,"column":95,"nodeType":"147","endLine":48,"endColumn":134,"suggestions":"162"},{"ruleId":"145","severity":1,"message":"159","line":49,"column":101,"nodeType":"147","endLine":49,"endColumn":140,"suggestions":"163"},{"ruleId":"145","severity":1,"message":"159","line":50,"column":107,"nodeType":"147","endLine":50,"endColumn":146,"suggestions":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"165","replacedBy":"169"},{"ruleId":"167","replacedBy":"170"},{"ruleId":"145","severity":1,"message":"157","line":35,"column":8,"nodeType":"147","endLine":35,"endColumn":10,"suggestions":"171"},{"ruleId":"145","severity":1,"message":"159","line":39,"column":8,"nodeType":"147","endLine":39,"endColumn":42,"suggestions":"172"},{"ruleId":"145","severity":1,"message":"159","line":46,"column":8,"nodeType":"147","endLine":46,"endColumn":54,"suggestions":"173"},{"ruleId":"145","severity":1,"message":"159","line":48,"column":95,"nodeType":"147","endLine":48,"endColumn":134,"suggestions":"174"},{"ruleId":"145","severity":1,"message":"159","line":49,"column":101,"nodeType":"147","endLine":49,"endColumn":140,"suggestions":"175"},{"ruleId":"145","severity":1,"message":"159","line":50,"column":107,"nodeType":"147","endLine":50,"endColumn":146,"suggestions":"176"},{"ruleId":"145","severity":1,"message":"177","line":36,"column":8,"nodeType":"147","endLine":36,"endColumn":10,"suggestions":"178"},{"ruleId":"141","severity":1,"message":"142","line":13,"column":39,"nodeType":"143","messageId":"144","endLine":13,"endColumn":41},{"ruleId":"145","severity":1,"message":"159","line":15,"column":97,"nodeType":"147","endLine":15,"endColumn":130,"suggestions":"179"},{"ruleId":"145","severity":1,"message":"159","line":20,"column":8,"nodeType":"147","endLine":20,"endColumn":41,"suggestions":"180"},{"ruleId":"145","severity":1,"message":"159","line":24,"column":8,"nodeType":"147","endLine":24,"endColumn":41,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":2,"column":9,"nodeType":"184","messageId":"185","endLine":2,"endColumn":12},{"ruleId":"182","severity":1,"message":"186","line":2,"column":14,"nodeType":"184","messageId":"185","endLine":2,"endColumn":20},{"ruleId":"182","severity":1,"message":"187","line":2,"column":22,"nodeType":"184","messageId":"185","endLine":2,"endColumn":33},{"ruleId":"145","severity":1,"message":"146","line":36,"column":8,"nodeType":"147","endLine":36,"endColumn":10,"suggestions":"188"},{"ruleId":"145","severity":1,"message":"149","line":41,"column":8,"nodeType":"147","endLine":41,"endColumn":10,"suggestions":"189"},{"ruleId":"145","severity":1,"message":"149","line":46,"column":8,"nodeType":"147","endLine":46,"endColumn":10,"suggestions":"190"},{"ruleId":"145","severity":1,"message":"149","line":51,"column":8,"nodeType":"147","endLine":51,"endColumn":10,"suggestions":"191"},{"ruleId":"145","severity":1,"message":"149","line":56,"column":8,"nodeType":"147","endLine":56,"endColumn":10,"suggestions":"192"},{"ruleId":"145","severity":1,"message":"149","line":61,"column":8,"nodeType":"147","endLine":61,"endColumn":10,"suggestions":"193"},{"ruleId":"145","severity":1,"message":"149","line":66,"column":8,"nodeType":"147","endLine":66,"endColumn":10,"suggestions":"194"},{"ruleId":"145","severity":1,"message":"149","line":71,"column":8,"nodeType":"147","endLine":71,"endColumn":10,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":61,"column":32,"nodeType":"198","endLine":61,"endColumn":49},{"ruleId":"182","severity":1,"message":"199","line":3,"column":9,"nodeType":"184","messageId":"185","endLine":3,"endColumn":17},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["200"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["201"],["202"],["203"],["204"],["205"],["206"],["207"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.",["208"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["209"],["210"],["211"],["212"],["213"],"no-native-reassign",["214"],"no-negated-in-lhs",["215"],["214"],["215"],["216"],["217"],["218"],["219"],["220"],["221"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["222"],["223"],["224"],["225"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormControl' is defined but never used.",["226"],["227"],["228"],["229"],["230"],["231"],["232"],["233"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Dispatch' is defined but never used.",{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"236","fix":"238"},{"desc":"236","fix":"239"},{"desc":"236","fix":"240"},{"desc":"236","fix":"241"},{"desc":"236","fix":"242"},{"desc":"236","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"246","fix":"248"},{"desc":"246","fix":"249"},{"desc":"246","fix":"250"},{"desc":"246","fix":"251"},"no-global-assign","no-unsafe-negation",{"desc":"244","fix":"252"},{"desc":"246","fix":"253"},{"desc":"246","fix":"254"},{"desc":"246","fix":"255"},{"desc":"246","fix":"256"},{"desc":"246","fix":"257"},{"desc":"236","fix":"258"},{"desc":"246","fix":"259"},{"desc":"246","fix":"260"},{"desc":"246","fix":"261"},{"desc":"234","fix":"262"},{"desc":"236","fix":"263"},{"desc":"236","fix":"264"},{"desc":"236","fix":"265"},{"desc":"236","fix":"266"},{"desc":"236","fix":"267"},{"desc":"236","fix":"268"},{"desc":"236","fix":"269"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"270","text":"271"},"Update the dependencies array to be: [dispatch]",{"range":"272","text":"273"},{"range":"274","text":"273"},{"range":"275","text":"273"},{"range":"276","text":"273"},{"range":"277","text":"273"},{"range":"278","text":"273"},{"range":"279","text":"273"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"280","text":"281"},"Update the dependencies array to be: [props]",{"range":"282","text":"283"},{"range":"284","text":"283"},{"range":"285","text":"283"},{"range":"286","text":"283"},{"range":"287","text":"283"},{"range":"288","text":"281"},{"range":"289","text":"283"},{"range":"290","text":"283"},{"range":"291","text":"283"},{"range":"292","text":"283"},{"range":"293","text":"283"},{"range":"294","text":"273"},{"range":"295","text":"283"},{"range":"296","text":"283"},{"range":"297","text":"283"},{"range":"298","text":"271"},{"range":"299","text":"273"},{"range":"300","text":"273"},{"range":"301","text":"273"},{"range":"302","text":"273"},{"range":"303","text":"273"},{"range":"304","text":"273"},{"range":"305","text":"273"},[1329,1331],"[demo, dispatch, isLoggedIn]",[1500,1502],"[dispatch]",[1671,1673],[1876,1878],[2089,2091],[2290,2292],[2437,2439],[2616,2618],[1464,1466],"[demo, dispatch, props.todolist.id]",[1581,1615],"[props]",[1846,1892],[1991,2030],[2133,2172],[2281,2320],[1464,1466],[1581,1615],[1846,1892],[1991,2030],[2133,2172],[2281,2320],[1282,1284],[765,798],[1071,1104],[1261,1294],[1329,1331],[1500,1502],[1671,1673],[1876,1878],[2089,2091],[2303,2305],[2450,2452],[2629,2631]]
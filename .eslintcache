[{"C:\\IT_Class\\todolist-16\\src\\app\\store.ts":"1","C:\\IT_Class\\todolist-16\\src\\features\\TodolistsList\\todolists-reducer.ts":"2","C:\\IT_Class\\todolist-16\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"3","C:\\IT_Class\\todolist-16\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"4","C:\\IT_Class\\todolist-16\\src\\components\\EditableSpan\\EditableSpan.tsx":"5","C:\\IT_Class\\todolist-16\\src\\api\\todolists-api.ts":"6","C:\\IT_Class\\todolist-16\\src\\features\\Login\\Login.tsx":"7","C:\\IT_Class\\todolist-16\\src\\index.tsx":"8","C:\\IT_Class\\todolist-16\\src\\app\\App.tsx":"9","C:\\IT_Class\\todolist-16\\src\\components\\AddItemForm\\AddItemForm.tsx":"10","C:\\IT_Class\\todolist-16\\src\\features\\Login\\auth-reducer.ts":"11","C:\\IT_Class\\todolist-16\\src\\app\\app-reducer.ts":"12","C:\\IT_Class\\todolist-16\\src\\features\\TodolistsList\\tasks-reducer.ts":"13","C:\\IT_Class\\todolist-16\\src\\utils\\error-utils.ts":"14","C:\\IT_Class\\todolist-16\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"15","C:\\IT_Class\\todolist-16\\src\\features\\TodolistsList\\TodolistsList.tsx":"16"},{"size":1182,"mtime":1612369437434,"results":"17","hashOfConfig":"18"},{"size":4585,"mtime":1597327450000,"results":"19","hashOfConfig":"18"},{"size":1092,"mtime":1596716576000,"results":"20","hashOfConfig":"18"},{"size":4193,"mtime":1596715250000,"results":"21","hashOfConfig":"18"},{"size":952,"mtime":1594154724000,"results":"22","hashOfConfig":"18"},{"size":3087,"mtime":1612459574890,"results":"23","hashOfConfig":"18"},{"size":3949,"mtime":1612444832764,"results":"24","hashOfConfig":"18"},{"size":748,"mtime":1612354965784,"results":"25","hashOfConfig":"18"},{"size":2801,"mtime":1612460222651,"results":"26","hashOfConfig":"18"},{"size":1595,"mtime":1596715562000,"results":"27","hashOfConfig":"18"},{"size":2025,"mtime":1612459912570,"results":"28","hashOfConfig":"18"},{"size":2478,"mtime":1612458385815,"results":"29","hashOfConfig":"18"},{"size":5633,"mtime":1596722126000,"results":"30","hashOfConfig":"18"},{"size":811,"mtime":1596719330000,"results":"31","hashOfConfig":"18"},{"size":1773,"mtime":1596295538000,"results":"32","hashOfConfig":"18"},{"size":4034,"mtime":1612451954016,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pj1nwo",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\IT_Class\\todolist-16\\src\\app\\store.ts",[],"C:\\IT_Class\\todolist-16\\src\\features\\TodolistsList\\todolists-reducer.ts",["72"],"import {todolistsAPI, TodolistType} from '../../api/todolists-api'\r\nimport {Dispatch} from 'redux'\r\nimport {RequestStatusType, setAppStatusAC, SetAppStatusActionType} from '../../app/app-reducer'\r\n\r\nconst initialState: Array<TodolistDomainType> = []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistDomainType> = initialState, action: ActionsType): Array<TodolistDomainType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST':\r\n            return state.filter(tl => tl.id != action.id)\r\n        case 'ADD-TODOLIST':\r\n            return [{...action.todolist, filter: 'all', entityStatus: 'idle'}, ...state]\r\n\r\n        case 'CHANGE-TODOLIST-TITLE':\r\n            return state.map(tl => tl.id === action.id ? {...tl, title: action.title} : tl)\r\n        case 'CHANGE-TODOLIST-FILTER':\r\n            return state.map(tl => tl.id === action.id ? {...tl, filter: action.filter} : tl)\r\n        case 'CHANGE-TODOLIST-ENTITY-STATUS':\r\n            return state.map(tl => tl.id === action.id ? {...tl, entityStatus: action.status} : tl)\r\n        case 'SET-TODOLISTS':\r\n            return action.todolists.map(tl => ({...tl, filter: 'all', entityStatus: 'idle'}))\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const removeTodolistAC = (id: string) => ({type: 'REMOVE-TODOLIST', id} as const)\r\nexport const addTodolistAC = (todolist: TodolistType) => ({type: 'ADD-TODOLIST', todolist} as const)\r\nexport const changeTodolistTitleAC = (id: string, title: string) => ({\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id,\r\n    title\r\n} as const)\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType) => ({\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id,\r\n    filter\r\n} as const)\r\nexport const changeTodolistEntityStatusAC = (id: string, status: RequestStatusType) => ({\r\n    type: 'CHANGE-TODOLIST-ENTITY-STATUS', id, status } as const)\r\nexport const setTodolistsAC = (todolists: Array<TodolistType>) => ({type: 'SET-TODOLISTS', todolists} as const)\r\n\r\n// thunks\r\nexport const fetchTodolistsTC = () => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.getTodolists()\r\n            .then((res) => {\r\n                dispatch(setTodolistsAC(res.data))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const removeTodolistTC = (todolistId: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        //изменим глобальный статус приложения, чтобы вверху полоса побежала\r\n        dispatch(setAppStatusAC('loading'))\r\n        //изменим статус конкретного тудулиста, чтобы он мог задизеблить что надо\r\n        dispatch(changeTodolistEntityStatusAC(todolistId, 'loading'))\r\n        todolistsAPI.deleteTodolist(todolistId)\r\n            .then((res) => {\r\n                dispatch(removeTodolistAC(todolistId))\r\n                //скажем глобально приложению, что асинхронная операция завершена\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const addTodolistTC = (title: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todolistsAPI.createTodolist(title)\r\n            .then((res) => {\r\n                dispatch(addTodolistAC(res.data.data.item))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n    }\r\n}\r\nexport const changeTodolistTitleTC = (id: string, title: string) => {\r\n    return (dispatch: Dispatch<ActionsType>) => {\r\n        todolistsAPI.updateTodolist(id, title)\r\n            .then((res) => {\r\n                dispatch(changeTodolistTitleAC(id, title))\r\n            })\r\n    }\r\n}\r\n\r\n// types\r\nexport type AddTodolistActionType = ReturnType<typeof addTodolistAC>;\r\nexport type RemoveTodolistActionType = ReturnType<typeof removeTodolistAC>;\r\nexport type SetTodolistsActionType = ReturnType<typeof setTodolistsAC>;\r\ntype ActionsType =\r\n    | RemoveTodolistActionType\r\n    | AddTodolistActionType\r\n    | ReturnType<typeof changeTodolistTitleAC>\r\n    | ReturnType<typeof changeTodolistFilterAC>\r\n    | SetTodolistsActionType\r\n    | ReturnType<typeof changeTodolistEntityStatusAC>\r\nexport type FilterValuesType = 'all' | 'active' | 'completed';\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType>\r\n",["73","74"],"C:\\IT_Class\\todolist-16\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],["75","76"],"C:\\IT_Class\\todolist-16\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["77","78","79","80","81","82"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType, TodolistDomainType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\n\r\ntype PropsType = {\r\n    todolist: TodolistDomainType\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    demo?: boolean\r\n}\r\n\r\nexport const Todolist = React.memo(function ({demo = false, ...props}: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (demo) {\r\n            return\r\n        }\r\n        const thunk = fetchTasksTC(props.todolist.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.todolist.id)\r\n    }, [props.addTask, props.todolist.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.todolist.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.todolist.id, title)\r\n    }, [props.todolist.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.todolist.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.todolist.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.todolist.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.todolist.entityStatus === 'loading'}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} disabled={props.todolist.entityStatus === 'loading'}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.todolist.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.todolist.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","C:\\IT_Class\\todolist-16\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"C:\\IT_Class\\todolist-16\\src\\api\\todolists-api.ts",[],"C:\\IT_Class\\todolist-16\\src\\features\\Login\\Login.tsx",["83"],"C:\\IT_Class\\todolist-16\\src\\index.tsx",[],"C:\\IT_Class\\todolist-16\\src\\app\\App.tsx",["84"],"C:\\IT_Class\\todolist-16\\src\\components\\AddItemForm\\AddItemForm.tsx",["85","86","87"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport const AddItemForm = React.memo(function({addItem, disabled = false}: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItemHandler = () => {\r\n        if (title.trim() !== \"\") {\r\n            addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItemHandler();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   disabled={disabled}\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItemHandler} disabled={disabled}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n","C:\\IT_Class\\todolist-16\\src\\features\\Login\\auth-reducer.ts",[],"C:\\IT_Class\\todolist-16\\src\\app\\app-reducer.ts",["88","89"],"C:\\IT_Class\\todolist-16\\src\\features\\TodolistsList\\tasks-reducer.ts",["90","91"],"C:\\IT_Class\\todolist-16\\src\\utils\\error-utils.ts",[],"C:\\IT_Class\\todolist-16\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["92","93","94"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","C:\\IT_Class\\todolist-16\\src\\features\\TodolistsList\\TodolistsList.tsx",["95","96","97","98","99","100","101","102"],{"ruleId":"103","severity":1,"message":"104","line":10,"column":45,"nodeType":"105","messageId":"106","endLine":10,"endColumn":47},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"107","replacedBy":"111"},{"ruleId":"109","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":35,"column":8,"nodeType":"115","endLine":35,"endColumn":10,"suggestions":"116"},{"ruleId":"113","severity":1,"message":"117","line":39,"column":8,"nodeType":"115","endLine":39,"endColumn":42,"suggestions":"118"},{"ruleId":"113","severity":1,"message":"117","line":46,"column":8,"nodeType":"115","endLine":46,"endColumn":54,"suggestions":"119"},{"ruleId":"113","severity":1,"message":"117","line":48,"column":95,"nodeType":"115","endLine":48,"endColumn":134,"suggestions":"120"},{"ruleId":"113","severity":1,"message":"117","line":49,"column":101,"nodeType":"115","endLine":49,"endColumn":140,"suggestions":"121"},{"ruleId":"113","severity":1,"message":"117","line":50,"column":107,"nodeType":"115","endLine":50,"endColumn":146,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":61,"column":32,"nodeType":"125","endLine":61,"endColumn":49},{"ruleId":"113","severity":1,"message":"126","line":36,"column":8,"nodeType":"115","endLine":36,"endColumn":10,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":2,"column":9,"nodeType":"130","messageId":"131","endLine":2,"endColumn":12},{"ruleId":"128","severity":1,"message":"132","line":2,"column":14,"nodeType":"130","messageId":"131","endLine":2,"endColumn":20},{"ruleId":"128","severity":1,"message":"133","line":2,"column":22,"nodeType":"130","messageId":"131","endLine":2,"endColumn":33},{"ruleId":"128","severity":1,"message":"134","line":2,"column":18,"nodeType":"130","messageId":"131","endLine":2,"endColumn":28},{"ruleId":"128","severity":1,"message":"135","line":2,"column":30,"nodeType":"130","messageId":"131","endLine":2,"endColumn":44},{"ruleId":"128","severity":1,"message":"136","line":5,"column":9,"nodeType":"130","messageId":"131","endLine":5,"endColumn":22},{"ruleId":"103","severity":1,"message":"104","line":13,"column":94,"nodeType":"105","messageId":"106","endLine":13,"endColumn":96},{"ruleId":"113","severity":1,"message":"117","line":15,"column":97,"nodeType":"115","endLine":15,"endColumn":130,"suggestions":"137"},{"ruleId":"113","severity":1,"message":"117","line":20,"column":8,"nodeType":"115","endLine":20,"endColumn":41,"suggestions":"138"},{"ruleId":"113","severity":1,"message":"117","line":24,"column":8,"nodeType":"115","endLine":24,"endColumn":41,"suggestions":"139"},{"ruleId":"113","severity":1,"message":"140","line":36,"column":8,"nodeType":"115","endLine":36,"endColumn":10,"suggestions":"141"},{"ruleId":"113","severity":1,"message":"142","line":41,"column":8,"nodeType":"115","endLine":41,"endColumn":10,"suggestions":"143"},{"ruleId":"113","severity":1,"message":"142","line":46,"column":8,"nodeType":"115","endLine":46,"endColumn":10,"suggestions":"144"},{"ruleId":"113","severity":1,"message":"142","line":51,"column":8,"nodeType":"115","endLine":51,"endColumn":10,"suggestions":"145"},{"ruleId":"113","severity":1,"message":"142","line":56,"column":8,"nodeType":"115","endLine":56,"endColumn":10,"suggestions":"146"},{"ruleId":"113","severity":1,"message":"142","line":61,"column":8,"nodeType":"115","endLine":61,"endColumn":10,"suggestions":"147"},{"ruleId":"113","severity":1,"message":"142","line":66,"column":8,"nodeType":"115","endLine":66,"endColumn":10,"suggestions":"148"},{"ruleId":"113","severity":1,"message":"142","line":71,"column":8,"nodeType":"115","endLine":71,"endColumn":10,"suggestions":"149"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-native-reassign",["150"],"no-negated-in-lhs",["151"],["150"],["151"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.","ArrayExpression",["152"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["153"],["154"],["155"],["156"],["157"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["158"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormControl' is defined but never used.","'authMeType' is defined but never used.","'TaskPriorities' is defined but never used.","'setAppErrorAC' is defined but never used.",["159"],["160"],["161"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.",["162"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["163"],["164"],["165"],["166"],["167"],["168"],["169"],"no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"172","fix":"174"},{"desc":"172","fix":"175"},{"desc":"172","fix":"176"},{"desc":"172","fix":"177"},{"desc":"178","fix":"179"},{"desc":"172","fix":"180"},{"desc":"172","fix":"181"},{"desc":"172","fix":"182"},{"desc":"183","fix":"184"},{"desc":"178","fix":"185"},{"desc":"178","fix":"186"},{"desc":"178","fix":"187"},{"desc":"178","fix":"188"},{"desc":"178","fix":"189"},{"desc":"178","fix":"190"},{"desc":"178","fix":"191"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"192","text":"193"},"Update the dependencies array to be: [props]",{"range":"194","text":"195"},{"range":"196","text":"195"},{"range":"197","text":"195"},{"range":"198","text":"195"},{"range":"199","text":"195"},"Update the dependencies array to be: [dispatch]",{"range":"200","text":"201"},{"range":"202","text":"195"},{"range":"203","text":"195"},{"range":"204","text":"195"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"205","text":"206"},{"range":"207","text":"201"},{"range":"208","text":"201"},{"range":"209","text":"201"},{"range":"210","text":"201"},{"range":"211","text":"201"},{"range":"212","text":"201"},{"range":"213","text":"201"},[1464,1466],"[demo, dispatch, props.todolist.id]",[1581,1615],"[props]",[1846,1892],[1991,2030],[2133,2172],[2281,2320],[1282,1284],"[dispatch]",[765,798],[1071,1104],[1261,1294],[1329,1331],"[demo, dispatch, isLoggedIn]",[1500,1502],[1671,1673],[1876,1878],[2089,2091],[2290,2292],[2437,2439],[2616,2618]]